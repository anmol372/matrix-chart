{{- if .Values.velero.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "matrix.fullname" . }}-velero-init
  labels:
  {{ include "matrix.labels" . | nindent 4}}
data:
{{- /*
    # Init containers to add to the Velero deployment's pod spec. At least one plugin provider image is required.
  initContainers: []
     - name: velero-plugin-for-aws
       image: velero/velero-plugin-for-aws:v1.0.0
       imagePullPolicy: IfNotPresent
       volumeMounts:
         - name: plugins
           mountPath: /target 

  configuration: {}
    # Cloud provider being used (e.g. aws, azure, gcp).
    provider: aws

    # Parameters for the `default` BackupStorageLocation. See
    # https://velero.io/docs/v1.0.0/api-types/backupstoragelocation/
    backupStorageLocation:
      # Cloud provider where backups should be stored. Usually should
      # match `configuration.provider`. Required.
      name: matrix-backup
      # Provider for the backup storage location. If omitted
      # `configuration.provider` will be used instead.
      provider:
      # Bucket to store backups in. Required.
      bucket: matrix-velero-backup
      # Prefix within bucket under which to store backups. Optional.
      prefix:
      # Additional provider-specific configuration. See link above
      # for details of required/optional fields for your provider.
      config:
        region: "us-east-2"
    # `velero server` default: 1m
    backupSyncPeriod:
  # Info about the secret to be used by the Velero deployment, which
  # should contain credentials for the cloud provider IAM account you've
  # set up for Velero.
  credentials:
    # Whether a secret should be used as the source of IAM account
    # credentials. Set to false if, for example, using kube2iam or
    # kiam to provide IAM credentials for the Velero pod.
    useSecret: true
    # Name of a pre-existing secret (if any) in the Velero namespace
    # that should be used to get IAM account credentials. Optional.
    existingSecret:
    # Data to be stored in the Velero secret, if `useSecret` is
    # true and `existingSecret` is empty. This should be the contents
    # of your IAM credentials file.
    secretContents:
      cloud: |
       [default]
       aws_access_key_id=AKIAXLJ42C2FT4OALFVD
       aws_secret_access_key=tXsIXVWxyDqiNmY4pmEluCn95RN16ZfV2Z7IuIOH
    # additional key/value pairs to be used as environment variables such as "DIGITALOCEAN_TOKEN: <your-key>". Values will be stored in the secret.
    extraEnvVars: {}
*/ -}}
{{- end }}